version: '3.8'

services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: MSSQL-employees-performance-db
    env_file: .env
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      MSSQL_SA_PASSWORD: "${MSSQL_SA_PASSWORD}"
    volumes:
      - mssql_data:/var/opt/mssql
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P $${MSSQL_SA_PASSWORD} -Q \"SELECT 1\""]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      app-network:
        aliases:
          - mssql-newrelic
    restart: unless-stopped

  db-setup:
    build: ./db-setup
    container_name: MSSQL-db-setup
    env_file: .env
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - app-network
    command: ["./scripts/run_load_data.sh"]
    restart: "no"

  api:
    build: ./api
    container_name: MSSQL-employees-api
    env_file: .env
    environment:
      DATABASE_URL: "mssql://${MSSQL_USER}:${MSSQL_PASSWORD}@mssql-newrelic:1433/${MSSQL_DB}?encrypt=false"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "${NEW_RELIC_APP_NAME}-API"
      PORT: "${API_PORT:-3000}"
      NODE_ENV: "${NODE_ENV:-production}"
    ports:
      - "${API_PORT:-3000}:3000"
    depends_on:
      db-setup:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      app-network:
        aliases:
          - api-layer
    restart: unless-stopped

  k6:
    build: ./k6
    container_name: MSSQL-employees-load-gen
    env_file: .env
    environment:
      API_URL: "http://api-layer:3000"
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "${NEW_RELIC_APP_NAME}-LoadGen"
      K6_VUS: "${K6_VUS:-50}"
      K6_DURATION: "${K6_DURATION:-30m}"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network
    restart: "no"

  newrelic-infra-bundle:
    build:
      context: ./infrastructure/newrelic
      dockerfile: Dockerfile
      args:
        - MSSQL_INTEGRATION_BRANCH=${MSSQL_INTEGRATION_BRANCH:-main}
    container_name: MSSQL-employees-newrelic-monitoring
    env_file: .env
    cap_add:
      - SYS_PTRACE
    privileged: true
    pid: host
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./infrastructure/newrelic/integrations.d/:/etc/newrelic-infra/integrations.d/:ro
    environment:
      NRIA_VERBOSE: 1
      NRIA_CUSTOM_ATTRIBUTES: '{"environment":"'"${NODE_ENV:-production}"'"}'
      NR_MSSQL_USERNAME: "${MSSQL_MONITOR_USER}"
      NR_MSSQL_PASSWORD: "${MSSQL_MONITOR_PASSWORD}"
      NR_MSSQL_HOSTNAME: mssql-newrelic
      NR_MSSQL_PORT: 1433
      NR_MSSQL_DATABASE: "${MSSQL_DB}"
      NRIA_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NRIA_DISPLAY_NAME: MSSQL-Employees-Performance-DB
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  mssql_data:
