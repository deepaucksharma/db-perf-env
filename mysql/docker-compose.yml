version: '3.8'

services:
  mysql:
    build:
      context: ./db-setup
      dockerfile: Dockerfile
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    networks:
      - backend
    healthcheck:
      test: mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: employees-api
    environment:
      MYSQL_HOST: mysql-db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      API_PORT: ${API_PORT}
    ports:
      - "${API_PORT}:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend

  load-generator:
    build:
      context: ./services/load-generator
      dockerfile: Dockerfile
    environment:
      API_URL: http://api:3000
      K6_VUS: ${K6_VUS}
      K6_DURATION: ${K6_DURATION}
    depends_on:
      - api
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysql_data:
  mysql_logs:
